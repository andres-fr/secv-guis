# Define needed environment variables: the rest of the yml will most
# likely translate well to other similar projects, except for the
# "secure" passwords in the deploy stage, which have to be adapted.
env:
  global:
    # test stage config
    - CODECOV_REQUIRED_PERCENT="0.0" # for utest+codecov
    # build stage config
    - DOC_PACKAGE_NAME="secv_guis"
    - DOC_AUTHOR_NAME="Andres F. R."
    - BUMPVERSION_FILE=".bumpversion.cfg"
    # deploy stage config
    - PYPI_USERNAME="fr_andres"
    - GH_RELEASES_ASSET_PATH="dist/*" # all matches for this path will be included into the GitHub release
    - REPO_NAME="andres-fr/secv-guis" # releases will only work under this name
    - CHANGELOG_PATH="CHANGELOG.md" # relative to repo root

# this line routes the builds to Ubuntu 16.04
dist: xenial

#
services: xvfb

# implicitly creates a venv for python in the VM (so pip syntax is "global")
language: python
python:
  - 3.7

# by default Travis starts every job from scratch. This speeds up things
cache: pip

# Perform pipeline only for events to master branch
branches:
  only:
  - master
  # this is needed for tag push actions (https://github.com/travis-ci/travis-ci/issues/8518#issuecomment-333489268)
  - /^v.*$/

#  https://docs.travis-ci.com/user/multi-os/
os:
  - linux
  # - osx
  #- windows

install: pip install -r requirements.txt


addons:
  apt:
    update: true
    packages:
      # to prevent exit 134 error https://stackoverflow.com/a/57280543/4511978
      - x11-utils
      - libxkbcommon-x11-0
      #
      - latexmk
      - texlive-fonts-recommended
      - texlive-latex-recommended
      - texlive-latex-extra
  # homebrew:
  #   packages: ...

# here we define the stages. stage ordering will come later
jobs:
  include:
    # Perform all needed tests to ensure repo quality. All scripts
    # in a stage are done in parallel. Stages are done sequentially.
    - stage: test
      name: "Check Code Style"
      script: python -m flake8
    - script: python -m unittest secv_guis_utest/tautology.py
      name: "Tautological Test"
    - script: python ci_scripts/utest_with_coverage.py -n "$DOC_PACKAGE_NAME" -p "$CODECOV_REQUIRED_PERCENT"
      name: "Unit Testing and Code Coverage"

    # If all tests pass, go on to the build stage
    - stage: build
      script: python setup.py sdist bdist_wheel
      name: "Build Package"
    - script: python ci_scripts/make_sphinx_docs.py -n "$DOC_PACKAGE_NAME" -a "$DOC_AUTHOR_NAME" -f "$BUMPVERSION_FILE" -o "docs" -l
      name: "Build Autodocs"

    # If building was successful, deploy to various platforms
    - stage: deploy
      before_script: python setup.py sdist bdist_wheel # since we are deploying in a proper stage, the repo starts from scratch and needs to rebuild.
      script: echo ""
      name: "Deploy to GitHub Releases and PyPI"
      deploy:
        - provider: releases
          skip_cleanup: true
          name: "$TRAVIS_COMMIT_MESSAGE"
          body: "See [CHANGELOG]($CHANGELOG_PATH) for details."
          api_key:
            secure: "DqUrFvVWuQndBXrPR3MDAfi1uIPcHTTlZD2eUdt9ZLMHKS3y5j6EnUVpSficoT0SH+YFSMyre9y0C0GkcPYzMgQNb7mH/9Fwj3V9tsoiZczUJwJyLa2Pq1JyeGFjHHEfo5v13AXZKcPYZHE4TXXOkvPCHgyKBj6xL7yH+PmW624xSyQht6i+c+hpwgdeGD4RJ95go9J1p2VQnVPcnrv3aQwa3XQ5F/VhrVeSdJv+pF3eSGIixEXiIozapgy0IAjG0u1TxhZV/ChlnYI2/Smj7wfDIrNyaVQVDGU6+ANm4uw2fATgmAL186UCbcEHxjysSseQ5Wl+sSc3GQ7yNH/eNnuqKBFfTsOfXWw+rdhDnP5K713Bx1PwggGAwXnkQlPv6/Oo+4cKdz8hlk9+J/R5zdX8GTfhOjAcAjePvbSE7woDqMYzr2hw7NNKl0Lzr6bgnmaKyYbpR4FnFTeqtrHaDniRmU9h5kIg2tyzjhuSjm/GQmR1eh/CNrvpNqIjbu1cwSmlrmp2ZJ4wSLTzG3TQMBnuH90wEz4uX492zFM6jqw9DQTnEM0ljXPQJccZ0xk2J38dIFlzhbEVC2Z/402/8MfFJkzhX6JO6mzMU1F0il1gsdpqosJauzG1iUAZ6/mprYWa86tQ+WVBVe4zQ4zNIxnuiAi1bZSUMREb8A+PLi4="
          file_glob: true
          file: "$GH_RELEASES_ASSET_PATH"
          on:
            tags: true
            # branch: master # already filtered out in the "branches" section
            repo: "$REPO_NAME"
        - provider: pypi
          skip_cleanup: true
          user: "$PYPI_USERNAME"
          password:
            secure: "eyMqiepCO+bHxs1IhmjEbXW1pKfGWXKpkcBgvjtevybTTg3T4XS3vwFFAO/PRe+CRSgTKieUQZaeXtQFraJJRhEzAa+5DlrQA256QRXqhbxs/684eQxcRWxxZGzLm0jbE8qH0EvPFE8mwPIWPNv4JtPpSlCo4vFMMxEaKmgK2Nt1SpXGaQ7s3F3DcctSx4rH2TvAh7pN4Ktx+mjM/1SFJ/DvLFKYBIhr2EswDCmxsZqc9NatbZpVN7Ip/oVsyrTd0i96C+GBufRmztJXDpdnxGAaSC517t6HPP7DiYfm2Izsf3YkQh9u0H/ZbCjx6BavvPQHcINdVBIzpwyYTNp3aIycSSMzylX/37LVbIaAP6fPSwxbM39fs+/ZiUx+H95q8ytTD2iOgjkEzij8AuaOZY12RRDkOZRd+J6uB4S4LkCtxf9RfNx9ZjY7GNlojFv6cAYsBBitnNCM0EwgBjUpnrfMwXduKnyoZE+lj3TvdRof/J/klVFEqz81FZpdttknjUE8+HOwvSGiS/RFzj1W1of+ofk+qNOEW1VsnzL1iEmk+rVHM+6Juf1INO5GhrUXgzrN51lXsMOkcDngNj2nDx/EJgMLkwRAk9rsd9zyGQYRPpvZ15qffYNi2YQLgR6jkhzzlDxFAWwVvY9x1C1bPHBZWBCzK5L3aMYmtBSSyuU="
          on:
            tags: true
            # branch: master # already filtered out in the "branches" section
            repo: "$REPO_NAME"


# Here you can specify the order for stages, or skip some
stages:
  # - test
  # - build
  - deploy
